# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import pathlib
import typing

@typing.final
class Configuration:
    @property
    def spring_tension(self) -> builtins.float: ...
    @spring_tension.setter
    def spring_tension(self, value: builtins.float) -> None: ...
    @property
    def rigidity(self) -> builtins.float: ...
    @rigidity.setter
    def rigidity(self, value: builtins.float) -> None: ...
    @property
    def damping(self) -> builtins.float: ...
    @damping.setter
    def damping(self, value: builtins.float) -> None: ...
    @property
    def spring_length(self) -> builtins.float: ...
    @spring_length.setter
    def spring_length(self, value: builtins.float) -> None: ...
    @property
    def radius(self) -> builtins.float: ...
    @radius.setter
    def radius(self, value: builtins.float) -> None: ...
    @property
    def potential_stiffness(self) -> builtins.float: ...
    @potential_stiffness.setter
    def potential_stiffness(self, value: builtins.float) -> None: ...
    @property
    def strength(self) -> builtins.float: ...
    @strength.setter
    def strength(self, value: builtins.float) -> None: ...
    @property
    def cutoff(self) -> builtins.float: ...
    @cutoff.setter
    def cutoff(self, value: builtins.float) -> None: ...
    @property
    def spring_length_threshold(self) -> builtins.float: ...
    @spring_length_threshold.setter
    def spring_length_threshold(self, value: builtins.float) -> None: ...
    @property
    def growth_rate(self) -> builtins.float: ...
    @growth_rate.setter
    def growth_rate(self, value: builtins.float) -> None: ...
    @property
    def neighbor_cap(self) -> builtins.int: ...
    @neighbor_cap.setter
    def neighbor_cap(self, value: builtins.int) -> None: ...
    @property
    def t0(self) -> builtins.float: ...
    @t0.setter
    def t0(self, value: builtins.float) -> None: ...
    @property
    def dt(self) -> builtins.float: ...
    @dt.setter
    def dt(self, value: builtins.float) -> None: ...
    @property
    def save_interval(self) -> builtins.float: ...
    @save_interval.setter
    def save_interval(self, value: builtins.float) -> None: ...
    @property
    def t_max(self) -> builtins.float: ...
    @t_max.setter
    def t_max(self, value: builtins.float) -> None: ...
    @property
    def domain_size(self) -> tuple[builtins.float, builtins.float, builtins.float]: ...
    @domain_size.setter
    def domain_size(self, value: tuple[builtins.float, builtins.float, builtins.float]) -> None: ...
    @property
    def initial_domain_size(self) -> tuple[builtins.float, builtins.float, builtins.float]: ...
    @initial_domain_size.setter
    def initial_domain_size(self, value: tuple[builtins.float, builtins.float, builtins.float]) -> None: ...
    @property
    def initial_domain_middle(self) -> tuple[builtins.float, builtins.float, builtins.float]: ...
    @initial_domain_middle.setter
    def initial_domain_middle(self, value: tuple[builtins.float, builtins.float, builtins.float]) -> None: ...
    @property
    def domain_segments(self) -> builtins.list[builtins.int]: ...
    @domain_segments.setter
    def domain_segments(self, value: builtins.list[builtins.int]) -> None: ...
    @property
    def n_threads(self) -> builtins.int: ...
    @n_threads.setter
    def n_threads(self, value: builtins.int) -> None: ...
    @property
    def n_agents(self) -> builtins.list[tuple[builtins.int, builtins.int]]: ...
    @n_agents.setter
    def n_agents(self, value: builtins.list[tuple[builtins.int, builtins.int]]) -> None: ...

def run_simulation(config:Configuration) -> pathlib.Path: ...

